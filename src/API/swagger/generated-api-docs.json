{
  "openapi": "3.0.0",
  "info": {
    "title": "Sprint API - Sprintify",
    "version": "1.0.0",
    "description": "A comprehensive API for project management and sprint tracking",
    "contact": {
      "name": "API Support",
      "email": "support@sprintify.com"
    },
    "license": {
      "name": "ISC",
      "url": "https://opensource.org/licenses/ISC"
    }
  },
  "servers": [
    {
      "url": "http://localhost:4000/api/v1",
      "description": "Development server"
    },
    {
      "url": "https://api.sprintify.com/api/v1",
      "description": "Production server"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "Enter JWT token"
      }
    },
    "schemas": {
      "RegisterUserDto": {
        "type": "object",
        "required": [
          "fullName",
          "email",
          "password"
        ],
        "properties": {
          "fullName": {
            "type": "string",
            "example": "John Doe",
            "description": "Full name of the user"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "john.doe@example.com",
            "description": "Email address of the user"
          },
          "password": {
            "type": "string",
            "minLength": 6,
            "example": "password123",
            "description": "Password for the user account"
          }
        }
      },
      "LoginUserDto": {
        "type": "object",
        "required": [
          "email",
          "password"
        ],
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "example": "john.doe@example.com"
          },
          "password": {
            "type": "string",
            "example": "password123"
          }
        }
      },
      "UserResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "fullName": {
            "type": "string",
            "example": "John Doe"
          },
          "email": {
            "type": "string",
            "example": "john.doe@example.com"
          },
          "isEmailVerified": {
            "type": "boolean",
            "example": false
          },
          "image": {
            "type": "string",
            "example": "/avatars/john.png",
            "description": "User profile image URL"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "CreateProjectDto": {
        "type": "object",
        "required": [
          "name",
          "key",
          "description"
        ],
        "properties": {
          "name": {
            "type": "string",
            "example": "My Awesome Project",
            "description": "Name of the project"
          },
          "key": {
            "type": "string",
            "example": "MAP",
            "description": "Unique key for the project (2-5 characters)"
          },
          "description": {
            "type": "string",
            "example": "This is an awesome project for managing tasks",
            "description": "Description of the project"
          }
        }
      },
      "UpdateProjectDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Updated Project Name"
          },
          "description": {
            "type": "string",
            "example": "Updated project description"
          }
        }
      },
      "ProjectResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "name": {
            "type": "string",
            "example": "My Awesome Project"
          },
          "keyPrefix": {
            "type": "string",
            "example": "MAP",
            "description": "Project key prefix"
          },
          "createdBy": {
            "type": "string",
            "example": "123e4567-e89b-12d3-a456-426614174000",
            "description": "ID of the user who created the project"
          },
          "activeSprintId": {
            "type": "string",
            "example": "123e4567-e89b-12d3-a456-426614174000",
            "description": "ID of the currently active sprint",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "CreateIssueDto": {
        "type": "object",
        "required": [
          "title",
          "type",
          "priority"
        ],
        "properties": {
          "title": {
            "type": "string",
            "example": "Fix login bug",
            "description": "Title of the issue"
          },
          "description": {
            "type": "string",
            "example": "Users cannot login with valid credentials",
            "description": "Detailed description of the issue"
          },
          "type": {
            "type": "string",
            "enum": [
              "bug",
              "story",
              "task"
            ],
            "example": "bug",
            "description": "Type of the issue"
          },
          "priority": {
            "type": "string",
            "enum": [
              "low",
              "medium",
              "high"
            ],
            "example": "medium",
            "description": "Priority level of the issue"
          },
          "assigneeId": {
            "type": "string",
            "example": "123e4567-e89b-12d3-a456-426614174000",
            "description": "ID of the assigned user"
          },
          "epicId": {
            "type": "string",
            "example": "123e4567-e89b-12d3-a456-426614174000",
            "description": "ID of the parent epic"
          },
          "sprintId": {
            "type": "string",
            "example": "123e4567-e89b-12d3-a456-426614174000",
            "description": "ID of the sprint"
          },
          "estimatedHours": {
            "type": "number",
            "example": 8,
            "description": "Estimated hours to complete"
          }
        }
      },
      "UpdateIssueDto": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "example": "Updated issue title"
          },
          "description": {
            "type": "string",
            "example": "Updated issue description"
          },
          "type": {
            "type": "string",
            "enum": [
              "bug",
              "story",
              "task"
            ],
            "example": "task"
          },
          "priority": {
            "type": "string",
            "enum": [
              "low",
              "medium",
              "high"
            ],
            "example": "medium"
          },
          "assigneeId": {
            "type": "string",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "statusId": {
            "type": "string",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "sprintId": {
            "type": "string",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "estimatedHours": {
            "type": "number",
            "example": 10
          },
          "loggedHours": {
            "type": "number",
            "example": 5
          }
        }
      },
      "IssueResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "key": {
            "type": "string",
            "example": "MAP-123",
            "description": "Unique key for the issue"
          },
          "title": {
            "type": "string",
            "example": "Fix login bug"
          },
          "description": {
            "type": "string",
            "example": "Users cannot login with valid credentials"
          },
          "storyPoint": {
            "type": "number",
            "example": 5
          },
          "statusId": {
            "type": "string",
            "example": "123e4567-e89b-12d3-a456-426614174000",
            "nullable": true
          },
          "assignee": {
            "type": "string",
            "example": "123e4567-e89b-12d3-a456-426614174000",
            "nullable": true
          },
          "epicId": {
            "type": "string",
            "example": "123e4567-e89b-12d3-a456-426614174000",
            "nullable": true
          },
          "sprintId": {
            "type": "string",
            "example": "123e4567-e89b-12d3-a456-426614174000",
            "nullable": true
          },
          "projectId": {
            "type": "string",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "type": {
            "type": "string",
            "enum": [
              "story",
              "bug",
              "task"
            ],
            "example": "story"
          },
          "priority": {
            "type": "string",
            "enum": [
              "low",
              "medium",
              "high"
            ],
            "example": "medium"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "assigneeUser": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "fullName": {
                "type": "string",
                "example": "John Doe"
              },
              "email": {
                "type": "string",
                "example": "john.doe@example.com"
              },
              "image": {
                "type": "string",
                "nullable": true
              }
            },
            "nullable": true
          },
          "status": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string",
                "example": "In Progress"
              },
              "type": {
                "type": "integer",
                "example": 1
              }
            },
            "nullable": true
          },
          "project": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string",
                "example": "My Awesome Project"
              },
              "keyPrefix": {
                "type": "string",
                "example": "MAP"
              }
            },
            "nullable": true
          },
          "epic": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "title": {
                "type": "string",
                "example": "User Management Epic"
              },
              "key": {
                "type": "string",
                "example": "MAP-EPIC-1"
              }
            },
            "nullable": true
          },
          "sprint": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string",
                "example": "Sprint 1"
              }
            },
            "nullable": true
          }
        }
      },
      "CreateEpicDto": {
        "type": "object",
        "required": [
          "name",
          "description"
        ],
        "properties": {
          "name": {
            "type": "string",
            "example": "User Authentication Epic",
            "description": "Name of the epic"
          },
          "description": {
            "type": "string",
            "example": "Implement complete user authentication system",
            "description": "Description of the epic"
          },
          "startDate": {
            "type": "string",
            "format": "date",
            "example": "2024-01-01",
            "description": "Start date of the epic"
          },
          "endDate": {
            "type": "string",
            "format": "date",
            "example": "2024-03-01",
            "description": "End date of the epic"
          }
        }
      },
      "UpdateEpicDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Updated Epic Name"
          },
          "description": {
            "type": "string",
            "example": "Updated epic description"
          },
          "startDate": {
            "type": "string",
            "format": "date",
            "example": "2024-01-15"
          },
          "endDate": {
            "type": "string",
            "format": "date",
            "example": "2024-03-15"
          }
        }
      },
      "EpicResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "key": {
            "type": "string",
            "example": "MAP-EPIC-1",
            "description": "Unique key for the epic"
          },
          "title": {
            "type": "string",
            "example": "User Authentication Epic"
          },
          "description": {
            "type": "string",
            "example": "Implement complete user authentication system"
          },
          "assignee": {
            "type": "string",
            "example": "123e4567-e89b-12d3-a456-426614174000",
            "description": "ID of the assigned user",
            "nullable": true
          },
          "projectId": {
            "type": "string",
            "example": "123e4567-e89b-12d3-a456-426614174000",
            "description": "ID of the project this epic belongs to"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "CreateSprintDto": {
        "type": "object",
        "required": [
          "name",
          "startDate",
          "endDate"
        ],
        "properties": {
          "name": {
            "type": "string",
            "example": "Sprint 1 - Foundation Setup"
          },
          "startDate": {
            "type": "string",
            "format": "date",
            "example": "2024-03-01"
          },
          "endDate": {
            "type": "string",
            "format": "date",
            "example": "2024-03-14"
          }
        }
      },
      "UpdateSprintDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 25,
            "example": "Updated Sprint Name",
            "description": "Updated name of the sprint"
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "example": "2024-01-01T00:00:00.000Z",
            "description": "Updated start date"
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "example": "2024-01-14T23:59:59.999Z",
            "description": "Updated end date"
          },
          "isActive": {
            "type": "boolean",
            "example": true,
            "description": "Whether the sprint is active"
          },
          "isArchived": {
            "type": "boolean",
            "example": false,
            "description": "Whether the sprint is archived"
          }
        }
      },
      "SprintResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "123e4567-e89b-12d3-a456-426614174000",
            "description": "Unique identifier of the sprint"
          },
          "name": {
            "type": "string",
            "example": "Sprint 1 - Foundation Setup",
            "description": "Name of the sprint"
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "example": "2024-03-01T00:00:00.000Z",
            "description": "Start date of the sprint"
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "example": "2024-03-14T23:59:59.999Z",
            "description": "End date of the sprint"
          },
          "isActive": {
            "type": "boolean",
            "example": true,
            "description": "Whether the sprint is currently active"
          },
          "isArchived": {
            "type": "boolean",
            "example": false,
            "description": "Whether the sprint is archived"
          },
          "isCompleted": {
            "type": "boolean",
            "example": false,
            "description": "Whether the sprint is completed"
          },
          "projectId": {
            "type": "string",
            "example": "123e4567-e89b-12d3-a456-426614174000",
            "description": "ID of the project this sprint belongs to"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2024-01-01T00:00:00.000Z",
            "description": "When the sprint was created"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2024-01-01T00:00:00.000Z",
            "description": "When the sprint was last updated"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "When the sprint was deleted (if soft deleted)"
          }
        }
      },
      "CreateBoardColumnDto": {
        "type": "object",
        "required": [
          "name",
          "order"
        ],
        "properties": {
          "name": {
            "type": "string",
            "example": "In Progress",
            "description": "Name of the board column"
          },
          "order": {
            "type": "number",
            "example": 2,
            "description": "Position of the column in the board"
          },
          "projectId": {
            "type": "string",
            "example": "123e4567-e89b-12d3-a456-426614174000",
            "description": "ID of the project"
          }
        }
      },
      "UpdateBoardColumnDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Updated Column Name"
          },
          "order": {
            "type": "number",
            "example": 3
          },
          "projectId": {
            "type": "string",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          }
        }
      },
      "BoardColumnResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "name": {
            "type": "string",
            "example": "In Progress"
          },
          "order": {
            "type": "number",
            "example": 2
          },
          "projectId": {
            "type": "string",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "CreateStatusDto": {
        "type": "object",
        "required": [
          "name",
          "type"
        ],
        "properties": {
          "name": {
            "type": "string",
            "example": "In Progress",
            "description": "Name of the status"
          },
          "type": {
            "type": "integer",
            "enum": [
              0,
              1,
              2
            ],
            "example": 1,
            "description": "Type of status (0: BACKLOG, 1: IN_PROGRESS, 2: DONE)"
          },
          "columnId": {
            "type": "string",
            "example": "123e4567-e89b-12d3-a456-426614174000",
            "description": "ID of the board column (optional)"
          }
        }
      },
      "UpdateStatusDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Updated Status Name"
          },
          "type": {
            "type": "integer",
            "enum": [
              0,
              1,
              2
            ],
            "example": 2,
            "description": "Type of status (0: BACKLOG, 1: IN_PROGRESS, 2: DONE)"
          },
          "columnId": {
            "type": "string",
            "example": "123e4567-e89b-12d3-a456-426614174000",
            "description": "ID of the board column (optional)"
          }
        }
      },
      "StatusResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "name": {
            "type": "string",
            "example": "In Progress"
          },
          "type": {
            "type": "integer",
            "enum": [
              0,
              1,
              2
            ],
            "example": 1,
            "description": "Type of status (0: BACKLOG, 1: IN_PROGRESS, 2: DONE)"
          },
          "columnId": {
            "type": "string",
            "example": "123e4567-e89b-12d3-a456-426614174000",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "CreateProjectMemberDto": {
        "type": "object",
        "required": [
          "userId",
          "projectId",
          "permission"
        ],
        "properties": {
          "userId": {
            "type": "string",
            "example": "123e4567-e89b-12d3-a456-426614174000",
            "description": "ID of the user to add as member"
          },
          "projectId": {
            "type": "string",
            "example": "123e4567-e89b-12d3-a456-426614174000",
            "description": "ID of the project"
          },
          "permission": {
            "type": "integer",
            "enum": [
              0,
              1,
              2
            ],
            "example": 0,
            "description": "Permission level (0: MEMBER, 1: MODERATOR, 2: OWNER)"
          }
        }
      },
      "UpdateProjectMemberDto": {
        "type": "object",
        "properties": {
          "permission": {
            "type": "integer",
            "enum": [
              0,
              1,
              2
            ],
            "example": 1,
            "description": "Permission level (0: MEMBER, 1: MODERATOR, 2: OWNER)"
          }
        }
      },
      "ProjectMemberResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "permission": {
            "type": "integer",
            "enum": [
              0,
              1,
              2
            ],
            "example": 0,
            "description": "Permission level (0: MEMBER, 1: MODERATOR, 2: OWNER)"
          },
          "userId": {
            "type": "string",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "projectId": {
            "type": "string",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "user": {
            "$ref": "#/components/schemas/UserResponseDto"
          }
        }
      },
      "UsersResponse": {
        "type": "object",
        "properties": {
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserResponseDto"
            }
          }
        }
      },
      "ProjectsResponse": {
        "type": "object",
        "properties": {
          "projects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProjectResponseDto"
            }
          }
        }
      },
      "IssuesResponse": {
        "type": "object",
        "properties": {
          "issues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IssueResponseDto"
            }
          }
        }
      },
      "EpicsResponse": {
        "type": "object",
        "properties": {
          "epics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EpicResponseDto"
            }
          }
        }
      },
      "SprintsResponse": {
        "type": "object",
        "properties": {
          "sprints": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SprintResponseDto"
            }
          }
        }
      },
      "StatusesResponse": {
        "type": "object",
        "properties": {
          "statuses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StatusResponseDto"
            }
          }
        }
      },
      "ColumnsResponse": {
        "type": "object",
        "properties": {
          "columns": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BoardColumnResponseDto"
            }
          }
        }
      },
      "ProjectMembersResponse": {
        "type": "object",
        "properties": {
          "project_members": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProjectMemberResponseDto"
            }
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "An error occurred"
          },
          "status": {
            "type": "number",
            "example": 400
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "property": {
                  "type": "string"
                },
                "constraints": {
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "AuthResponse": {
        "type": "object",
        "properties": {
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserResponseDto"
            }
          },
          "token": {
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...",
            "description": "JWT access token"
          },
          "emailVerificationToken": {
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...",
            "description": "Email verification token (only on registration)"
          }
        },
        "required": [
          "users",
          "token"
        ]
      },
      "EmailVerificationResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserResponseDto"
            }
          }
        }
      },
      "PasswordResetResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Password reset email sent successfully"
          },
          "success": {
            "type": "boolean",
            "example": true
          }
        }
      },
      "PaginationMeta": {
        "type": "object",
        "properties": {
          "page": {
            "type": "number",
            "example": 1,
            "description": "Current page number"
          },
          "limit": {
            "type": "number",
            "example": 20,
            "description": "Number of items per page"
          },
          "total": {
            "type": "number",
            "example": 100,
            "description": "Total number of items"
          },
          "totalPages": {
            "type": "number",
            "example": 5,
            "description": "Total number of pages"
          }
        }
      },
      "PaginatedResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Data retrieved successfully"
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "meta": {
            "$ref": "#/components/schemas/PaginationMeta"
          }
        }
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "tags": [
    {
      "name": "Authentication",
      "description": "User authentication endpoints"
    },
    {
      "name": "Users",
      "description": "User management endpoints"
    },
    {
      "name": "Projects",
      "description": "Project management endpoints"
    },
    {
      "name": "Issues",
      "description": "Issue/Task management endpoints"
    },
    {
      "name": "Epics",
      "description": "Epic management endpoints"
    },
    {
      "name": "Sprints",
      "description": "Sprint management endpoints"
    },
    {
      "name": "Board Columns",
      "description": "Board column management endpoints"
    },
    {
      "name": "Statuses",
      "description": "Status management endpoints"
    },
    {
      "name": "Project Members",
      "description": "Project member management endpoints"
    }
  ],
  "paths": {
    "/api/v1/board-column": {
      "post": {
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ColumnsResponse",
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Board column created successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "123e4567-e89b-12d3-a456-426614174000"
                        },
                        "name": {
                          "type": "string",
                          "example": "In Progress"
                        },
                        "position": {
                          "type": "number",
                          "example": 2
                        },
                        "projectId": {
                          "type": "string",
                          "example": "123e4567-e89b-12d3-a456-426614174000"
                        },
                        "createdAt": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "updatedAt": {
                          "type": "string",
                          "format": "date-time"
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "Board column created successfully"
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions (Moderator required)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Create a new board column",
        "tags": [
          "Board Columns"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBoardColumnDto"
              }
            }
          }
        }
      }
    },
    "/api/v1/{projectId}/epic": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EpicsResponse",
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Epics retrieved successfully"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/EpicResponseDto"
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/PaginationMeta"
                    }
                  }
                }
              }
            },
            "description": "Epics retrieved successfully"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Get project epics",
        "tags": [
          "Epics"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Project ID"
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Page number"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "default": 20
            },
            "description": "Number of items per page"
          },
          {
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string"
            },
            "description": "Search term for epic name or description"
          }
        ]
      },
      "post": {
        "summary": "Create a new epic",
        "tags": [
          "Epics"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Project ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEpicDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Epic created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Epic created successfully"
                    },
                    "data": {
                      "$ref": "#/components/schemas/EpicResponseDto"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/{projectId}/epic/{id}": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EpicsResponse",
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Epic retrieved successfully"
                    },
                    "data": {
                      "$ref": "#/components/schemas/EpicResponseDto"
                    }
                  }
                }
              }
            },
            "description": "Epic retrieved successfully"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Epic not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Get epic by ID",
        "tags": [
          "Epics"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Project ID"
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Epic ID"
          }
        ]
      },
      "patch": {
        "summary": "Update epic",
        "tags": [
          "Epics"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Project ID"
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Epic ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateEpicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Epic updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Epic updated successfully"
                    },
                    "data": {
                      "$ref": "#/components/schemas/EpicResponseDto"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Epic not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete epic",
        "tags": [
          "Epics"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Project ID"
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Epic ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Epic deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Epic deleted successfully"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Epic not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/{projectId}/epic/key/{key}": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EpicsResponse",
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Epic retrieved successfully"
                    },
                    "data": {
                      "$ref": "#/components/schemas/EpicResponseDto"
                    }
                  }
                }
              }
            },
            "description": "Epic retrieved successfully"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Epic not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Get epic by key",
        "tags": [
          "Epics"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Project ID"
          },
          {
            "in": "path",
            "name": "key",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Epic key (e.g., MAP-EPIC-1)"
          }
        ]
      }
    },
    "/api/v1/{projectId}/issues": {
      "post": {
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IssuesResponse",
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Issue created successfully"
                    },
                    "data": {
                      "$ref": "#/components/schemas/IssueResponseDto"
                    }
                  }
                }
              }
            },
            "description": "Issue created successfully"
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Create a new issue",
        "tags": [
          "Issues"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Project ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateIssueDto"
              }
            }
          }
        }
      },
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IssuesResponse",
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Issues retrieved successfully"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/IssueResponseDto"
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/PaginationMeta"
                    }
                  }
                }
              }
            },
            "description": "Issues retrieved successfully"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Get project issues (lightweight/partial)",
        "tags": [
          "Issues"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Project ID"
          },
          {
            "in": "query",
            "name": "sprintId",
            "schema": {
              "type": "string"
            },
            "description": "Filter by sprint ID"
          },
          {
            "in": "query",
            "name": "assignee",
            "schema": {
              "type": "string"
            },
            "description": "Filter by assignee ID"
          },
          {
            "in": "query",
            "name": "statusId",
            "schema": {
              "type": "string"
            },
            "description": "Filter by status ID"
          },
          {
            "in": "query",
            "name": "epicId",
            "schema": {
              "type": "string"
            },
            "description": "Filter by epic ID"
          },
          {
            "in": "query",
            "name": "parentId",
            "schema": {
              "type": "string"
            },
            "description": "Filter by parent issue ID"
          },
          {
            "in": "query",
            "name": "type",
            "schema": {
              "type": "string",
              "enum": [
                "TASK",
                "BUG",
                "STORY",
                "EPIC"
              ]
            },
            "description": "Filter by issue type"
          },
          {
            "in": "query",
            "name": "priority",
            "schema": {
              "type": "string",
              "enum": [
                "LOW",
                "MEDIUM",
                "HIGH",
                "CRITICAL"
              ]
            },
            "description": "Filter by priority"
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Page number"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "default": 20
            },
            "description": "Number of items per page"
          },
          {
            "in": "query",
            "name": "searchTerm",
            "schema": {
              "type": "string"
            },
            "description": "Search term for issue title or description"
          }
        ]
      }
    },
    "/api/v1/project/{projectId}/project-members": {
      "post": {
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectMembersResponse"
                }
              }
            },
            "description": "Member added successfully"
          },
          "400": {
            "description": "Invalid input data or user already a member",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Project not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Add a member to a project",
        "tags": [
          "Project Members"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Project ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "userId",
                  "permission"
                ],
                "properties": {
                  "userId": {
                    "type": "string",
                    "example": "123e4567-e89b-12d3-a456-426614174000",
                    "description": "ID of the user to add as member"
                  },
                  "permission": {
                    "type": "integer",
                    "enum": [
                      0,
                      1,
                      2
                    ],
                    "example": 0,
                    "description": "Permission level (0:MEMBER, 1:MODERATOR, 2:ADMINISTRATOR)"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get all members of a project",
        "tags": [
          "Project Members"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Project ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Project members retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectMembersResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Project not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/project": {
      "post": {
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectsResponse",
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Project created successfully"
                    },
                    "data": {
                      "$ref": "#/components/schemas/ProjectResponseDto"
                    }
                  }
                }
              }
            },
            "description": "Project created successfully"
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Project key already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Create a new project",
        "tags": [
          "Projects"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProjectDto"
              }
            }
          }
        }
      },
      "patch": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectsResponse",
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Project updated successfully"
                    },
                    "data": {
                      "$ref": "#/components/schemas/ProjectResponseDto"
                    }
                  }
                }
              }
            },
            "description": "Project updated successfully"
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Project not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Update project",
        "tags": [
          "Projects"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProjectDto"
              }
            }
          }
        }
      },
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectsResponse",
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Projects retrieved successfully"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ProjectResponseDto"
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/PaginationMeta"
                    }
                  }
                }
              }
            },
            "description": "Projects retrieved successfully"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Get user projects",
        "tags": [
          "Projects"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Page number"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "default": 20
            },
            "description": "Number of items per page"
          },
          {
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string"
            },
            "description": "Search term for project name or key"
          }
        ]
      }
    },
    "/api/v1/project/{id}": {
      "delete": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectsResponse",
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Project deleted successfully"
                    }
                  }
                }
              }
            },
            "description": "Project deleted successfully"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Project not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Delete project",
        "tags": [
          "Projects"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Project ID"
          }
        ]
      }
    },
    "/api/v1/project/{projectId}/sprints": {
      "post": {
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SprintsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sprint/{id}": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SprintsResponse",
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Sprint retrieved successfully"
                    },
                    "data": {
                      "$ref": "#/components/schemas/SprintResponseDto"
                    },
                    "success": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                }
              }
            },
            "description": "Sprint retrieved successfully"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Sprint not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Get sprint by ID",
        "tags": [
          "Sprints"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Sprint ID"
          }
        ]
      },
      "put": {
        "summary": "Update sprint",
        "tags": [
          "Sprints"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Sprint ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSprintDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Sprint updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Sprint updated successfully"
                    },
                    "data": {
                      "$ref": "#/components/schemas/SprintResponseDto"
                    },
                    "success": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Sprint not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete sprint",
        "tags": [
          "Sprints"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Sprint ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Sprint deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Sprint deleted successfully"
                    },
                    "success": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Sprint not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/status": {
      "post": {
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusesResponse",
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Status created successfully"
                    },
                    "data": {
                      "$ref": "#/components/schemas/StatusResponseDto"
                    },
                    "success": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                }
              }
            },
            "description": "Status created successfully"
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Board column not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Create a new status",
        "tags": [
          "Status"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateStatusDto"
              }
            }
          }
        }
      },
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusesResponse",
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "All statuses retrieved successfully"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/StatusResponseDto"
                      }
                    },
                    "success": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                }
              }
            },
            "description": "Statuses retrieved successfully"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Get all statuses",
        "tags": [
          "Status"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/status/{id}": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusesResponse",
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Status retrieved successfully"
                    },
                    "data": {
                      "$ref": "#/components/schemas/StatusResponseDto"
                    },
                    "success": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                }
              }
            },
            "description": "Status retrieved successfully"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Status not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Get status by ID",
        "tags": [
          "Status"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Status ID"
          }
        ]
      },
      "put": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusesResponse",
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Status updated successfully"
                    },
                    "data": {
                      "$ref": "#/components/schemas/StatusResponseDto"
                    },
                    "success": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                }
              }
            },
            "description": "Status updated successfully"
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Status not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Update status",
        "tags": [
          "Status"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Status ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStatusDto"
              }
            }
          }
        }
      },
      "delete": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusesResponse",
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Status deleted successfully"
                    },
                    "success": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                }
              }
            },
            "description": "Status deleted successfully"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Status not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Delete status",
        "tags": [
          "Status"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Status ID"
          }
        ]
      }
    },
    "/api/v1/status/column/{columnId}": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusesResponse",
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Statuses retrieved successfully"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/StatusResponseDto"
                      }
                    },
                    "success": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                }
              }
            },
            "description": "Statuses retrieved successfully"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "summary": "Get statuses by column ID",
        "tags": [
          "Status"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "columnId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Board column ID"
          }
        ]
      }
    },
    "/api/v1/user/register": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Register a new user",
        "description": "Creates a new user account and sends email verification",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterUserDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "$ref": "#/components/schemas/UserResponseDto"
                    },
                    "token": {
                      "type": "string"
                    },
                    "emailVerificationToken": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/AuthResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "emailVerificationToken": {
                          "type": "string",
                          "description": "Token for email verification"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "User already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/user/login": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Login user",
        "description": "Authenticate user with email and password",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginUserDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "$ref": "#/components/schemas/UserResponseDto"
                    },
                    "token": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/user/verify-email": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Verify user email",
        "description": "Verify user's email address using verification token",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "userEmail": {
                    "type": "string",
                    "format": "email",
                    "example": "john.doe@example.com"
                  }
                },
                "required": [
                  "userEmail"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Email verified successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "user": {
                      "$ref": "#/components/schemas/UserResponseDto"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid token or email",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized or invalid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/user/forget-password": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Request password reset",
        "description": "Send password reset email to user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "john.doe@example.com"
                  }
                },
                "required": [
                  "email"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password reset email sent",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Password reset email sent successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid email",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/user/password-reset": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Reset user password",
        "description": "Reset user password using reset token",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "password": {
                    "type": "string"
                  },
                  "oldPassword": {
                    "type": "string",
                    "example": "oldpassword123",
                    "description": "Required if not using reset token"
                  },
                  "tokenType": {
                    "type": "string"
                  },
                  "newPassword": {
                    "type": "string",
                    "example": "newpassword123",
                    "description": "New password"
                  }
                },
                "required": [
                  "newPassword"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password reset successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Password reset successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized or invalid token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/user/update-profile": {
      "put": {
        "tags": [
          "User"
        ],
        "summary": "Update user profile",
        "description": "Update user profile information including profile photo",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "fullName": {
                    "type": "string"
                  },
                  "profilePhoto": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Profile updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "user": {
                      "$ref": "#/components/schemas/UserResponseDto"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/v1/user/profile": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get user profile",
        "description": "Retrieve the authenticated user's profile information",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Profile retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "user": {
                      "$ref": "#/components/schemas/UserResponseDto"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/v1/board-column/{id}": {
      "patch": {
        "summary": "Update board column",
        "tags": [
          "Board Columns"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Board column ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Updated Column Name"
                  },
                  "position": {
                    "type": "number",
                    "example": 3
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Board column updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Board column updated successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "123e4567-e89b-12d3-a456-426614174000"
                        },
                        "name": {
                          "type": "string",
                          "example": "Updated Column Name"
                        },
                        "position": {
                          "type": "number",
                          "example": 3
                        },
                        "projectId": {
                          "type": "string",
                          "example": "123e4567-e89b-12d3-a456-426614174000"
                        },
                        "createdAt": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "updatedAt": {
                          "type": "string",
                          "format": "date-time"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions (Moderator required)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Board column not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete board column",
        "tags": [
          "Board Columns"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Board column ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Board column deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Board column deleted successfully"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions (Moderator required)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Board column not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/board-column/{projectId}": {
      "get": {
        "summary": "Get project board columns",
        "tags": [
          "Board Columns"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Project ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Board columns retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Board columns retrieved successfully"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "123e4567-e89b-12d3-a456-426614174000"
                          },
                          "name": {
                            "type": "string",
                            "example": "To Do"
                          },
                          "position": {
                            "type": "number",
                            "example": 1
                          },
                          "projectId": {
                            "type": "string",
                            "example": "123e4567-e89b-12d3-a456-426614174000"
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "updatedAt": {
                            "type": "string",
                            "format": "date-time"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Project not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/{projectId}/epic/{epicId}/issues": {
      "get": {
        "summary": "Get epic issues",
        "tags": [
          "Epics"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Project ID"
          },
          {
            "in": "path",
            "name": "epicId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Epic ID"
          },
          {
            "in": "query",
            "name": "assignee",
            "schema": {
              "type": "string"
            },
            "description": "Filter by assignee ID"
          },
          {
            "in": "query",
            "name": "statusId",
            "schema": {
              "type": "string"
            },
            "description": "Filter by status ID"
          },
          {
            "in": "query",
            "name": "type",
            "schema": {
              "type": "string",
              "enum": [
                "TASK",
                "BUG",
                "STORY",
                "EPIC"
              ]
            },
            "description": "Filter by issue type"
          },
          {
            "in": "query",
            "name": "priority",
            "schema": {
              "type": "string",
              "enum": [
                "LOW",
                "MEDIUM",
                "HIGH",
                "CRITICAL"
              ]
            },
            "description": "Filter by priority"
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Page number"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "default": 20
            },
            "description": "Number of items per page"
          },
          {
            "in": "query",
            "name": "searchTerm",
            "schema": {
              "type": "string"
            },
            "description": "Search term for issue title or description"
          }
        ],
        "responses": {
          "200": {
            "description": "Epic issues retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Epic issues retrieved successfully"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/IssueResponseDto"
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/PaginationMeta"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Epic not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/{projectId}/issues/{id}": {
      "get": {
        "summary": "Get issue by ID (full details)",
        "tags": [
          "Issues"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Project ID"
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Issue ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Issue retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Issue retrieved successfully"
                    },
                    "data": {
                      "$ref": "#/components/schemas/IssueResponseDto"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Issue not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update issue",
        "tags": [
          "Issues"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Project ID"
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Issue ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateIssueDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Issue updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Issue updated successfully"
                    },
                    "data": {
                      "$ref": "#/components/schemas/IssueResponseDto"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Issue not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete issue",
        "tags": [
          "Issues"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Project ID"
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Issue ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Issue deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Issue deleted successfully"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Issue not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/issues/key/{key}": {
      "get": {
        "summary": "Get issue by key",
        "tags": [
          "Issues"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "key",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Issue key (e.g., MAP-123)"
          }
        ],
        "responses": {
          "200": {
            "description": "Issue retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Issue retrieved successfully"
                    },
                    "data": {
                      "$ref": "#/components/schemas/IssueResponseDto"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Issue not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/issues/my-assigned": {
      "get": {
        "summary": "Get issues assigned to current user",
        "tags": [
          "Issues"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "projectId",
            "schema": {
              "type": "string"
            },
            "description": "Filter by project ID"
          },
          {
            "in": "query",
            "name": "sprintId",
            "schema": {
              "type": "string"
            },
            "description": "Filter by sprint ID"
          },
          {
            "in": "query",
            "name": "statusId",
            "schema": {
              "type": "string"
            },
            "description": "Filter by status ID"
          },
          {
            "in": "query",
            "name": "epicId",
            "schema": {
              "type": "string"
            },
            "description": "Filter by epic ID"
          },
          {
            "in": "query",
            "name": "parentId",
            "schema": {
              "type": "string"
            },
            "description": "Filter by parent issue ID"
          },
          {
            "in": "query",
            "name": "type",
            "schema": {
              "type": "string",
              "enum": [
                "TASK",
                "BUG",
                "STORY",
                "EPIC"
              ]
            },
            "description": "Filter by issue type"
          },
          {
            "in": "query",
            "name": "priority",
            "schema": {
              "type": "string",
              "enum": [
                "LOW",
                "MEDIUM",
                "HIGH",
                "CRITICAL"
              ]
            },
            "description": "Filter by priority"
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Page number"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "default": 20
            },
            "description": "Number of items per page"
          },
          {
            "in": "query",
            "name": "searchTerm",
            "schema": {
              "type": "string"
            },
            "description": "Search term for issue title or description"
          }
        ],
        "responses": {
          "200": {
            "description": "Assigned issues retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Assigned issues retrieved successfully"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/IssueResponseDto"
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/PaginationMeta"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sprints/{sprintId}/issues": {
      "get": {
        "summary": "Get issues by sprint",
        "tags": [
          "Issues"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "sprintId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Sprint ID"
          },
          {
            "in": "query",
            "name": "projectId",
            "schema": {
              "type": "string"
            },
            "description": "Filter by project ID"
          },
          {
            "in": "query",
            "name": "assignee",
            "schema": {
              "type": "string"
            },
            "description": "Filter by assignee ID"
          },
          {
            "in": "query",
            "name": "statusId",
            "schema": {
              "type": "string"
            },
            "description": "Filter by status ID"
          },
          {
            "in": "query",
            "name": "epicId",
            "schema": {
              "type": "string"
            },
            "description": "Filter by epic ID"
          },
          {
            "in": "query",
            "name": "parentId",
            "schema": {
              "type": "string"
            },
            "description": "Filter by parent issue ID"
          },
          {
            "in": "query",
            "name": "type",
            "schema": {
              "type": "string",
              "enum": [
                "TASK",
                "BUG",
                "STORY",
                "EPIC"
              ]
            },
            "description": "Filter by issue type"
          },
          {
            "in": "query",
            "name": "priority",
            "schema": {
              "type": "string",
              "enum": [
                "LOW",
                "MEDIUM",
                "HIGH",
                "CRITICAL"
              ]
            },
            "description": "Filter by priority"
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Page number"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "default": 20
            },
            "description": "Number of items per page"
          },
          {
            "in": "query",
            "name": "searchTerm",
            "schema": {
              "type": "string"
            },
            "description": "Search term for issue title or description"
          }
        ],
        "responses": {
          "200": {
            "description": "Sprint issues retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Sprint issues retrieved successfully"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/IssueResponseDto"
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/PaginationMeta"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/epics/{epicId}/issues": {
      "get": {
        "summary": "Get issues by epic",
        "tags": [
          "Issues"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "epicId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Epic ID"
          },
          {
            "in": "query",
            "name": "projectId",
            "schema": {
              "type": "string"
            },
            "description": "Filter by project ID"
          },
          {
            "in": "query",
            "name": "assignee",
            "schema": {
              "type": "string"
            },
            "description": "Filter by assignee ID"
          },
          {
            "in": "query",
            "name": "statusId",
            "schema": {
              "type": "string"
            },
            "description": "Filter by status ID"
          },
          {
            "in": "query",
            "name": "parentId",
            "schema": {
              "type": "string"
            },
            "description": "Filter by parent issue ID"
          },
          {
            "in": "query",
            "name": "type",
            "schema": {
              "type": "string",
              "enum": [
                "TASK",
                "BUG",
                "STORY",
                "EPIC"
              ]
            },
            "description": "Filter by issue type"
          },
          {
            "in": "query",
            "name": "priority",
            "schema": {
              "type": "string",
              "enum": [
                "LOW",
                "MEDIUM",
                "HIGH",
                "CRITICAL"
              ]
            },
            "description": "Filter by priority"
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Page number"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "default": 20
            },
            "description": "Number of items per page"
          },
          {
            "in": "query",
            "name": "searchTerm",
            "schema": {
              "type": "string"
            },
            "description": "Search term for issue title or description"
          }
        ],
        "responses": {
          "200": {
            "description": "Epic issues retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Epic issues retrieved successfully"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/IssueResponseDto"
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/PaginationMeta"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/project/{projectId}/project-members/{memberId}": {
      "patch": {
        "summary": "Update project member permission",
        "tags": [
          "Project Members"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Project ID"
          },
          {
            "in": "path",
            "name": "memberId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Member ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProjectMemberDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Member permission updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectMembersResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Member not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Remove a member from a project",
        "tags": [
          "Project Members"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Project ID"
          },
          {
            "in": "path",
            "name": "memberId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Member ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Member removed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectMembersResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Member not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/project/{projectId}/project-members/check/{userId}": {
      "get": {
        "summary": "Check if user is a member and get their permission level",
        "tags": [
          "Project Members"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Project ID"
          },
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "User ID to check"
          }
        ],
        "responses": {
          "200": {
            "description": "User permission check result",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "project_members": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "userId": {
                            "type": "string"
                          },
                          "projectId": {
                            "type": "string"
                          },
                          "permission": {
                            "type": "integer",
                            "nullable": true
                          },
                          "isMember": {
                            "type": "boolean"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Project not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/{projectId}/sprints": {
      "post": {
        "summary": "Create a new sprint",
        "tags": [
          "Sprints"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Project ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSprintDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Sprint created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Sprint created successfully"
                    },
                    "data": {
                      "$ref": "#/components/schemas/SprintResponseDto"
                    },
                    "success": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get all sprints for a project",
        "tags": [
          "Sprints"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Project ID"
          },
          {
            "in": "query",
            "name": "status",
            "schema": {
              "type": "string",
              "enum": [
                "planning",
                "active",
                "completed",
                "closed"
              ]
            },
            "description": "Filter by sprint status"
          },
          {
            "in": "query",
            "name": "isActive",
            "schema": {
              "type": "boolean"
            },
            "description": "Filter by active status"
          },
          {
            "in": "query",
            "name": "isArchived",
            "schema": {
              "type": "boolean"
            },
            "description": "Filter by archived status"
          }
        ],
        "responses": {
          "200": {
            "description": "Sprints retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Sprints retrieved successfully"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SprintResponseDto"
                      }
                    },
                    "success": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Project not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/{projectId}/sprints/active": {
      "get": {
        "summary": "Get active sprint for a project",
        "tags": [
          "Sprints"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Project ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Active sprint retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Active sprint retrieved successfully"
                    },
                    "data": {
                      "$ref": "#/components/schemas/SprintResponseDto"
                    },
                    "success": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "No active sprint found or project not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sprint/{id}/activate": {
      "post": {
        "summary": "Activate sprint",
        "tags": [
          "Sprints"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Sprint ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Sprint activated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Sprint activated successfully"
                    },
                    "data": {
                      "$ref": "#/components/schemas/SprintResponseDto"
                    },
                    "success": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Sprint cannot be activated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Sprint not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sprint/{id}/complete": {
      "post": {
        "summary": "Complete sprint",
        "tags": [
          "Sprints"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Sprint ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Sprint completed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Sprint completed successfully"
                    },
                    "data": {
                      "$ref": "#/components/schemas/SprintResponseDto"
                    },
                    "success": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Sprint cannot be completed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Sprint not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sprint/{id}/issues": {
      "get": {
        "summary": "Get sprint with its issues",
        "tags": [
          "Sprints"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Sprint ID"
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            },
            "description": "Page number"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 10
            },
            "description": "Number of items per page"
          },
          {
            "in": "query",
            "name": "type",
            "schema": {
              "type": "string",
              "enum": [
                "TASK",
                "BUG",
                "STORY",
                "EPIC"
              ]
            },
            "description": "Filter by issue type"
          },
          {
            "in": "query",
            "name": "priority",
            "schema": {
              "type": "string",
              "enum": [
                "LOW",
                "MEDIUM",
                "HIGH",
                "CRITICAL"
              ]
            },
            "description": "Filter by priority"
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Page number"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "default": 20
            },
            "description": "Number of items per page"
          }
        ],
        "responses": {
          "200": {
            "description": "Sprint with issues retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Sprint with issues retrieved successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "sprint": {
                          "$ref": "#/components/schemas/SprintResponseDto"
                        },
                        "issues": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/IssueResponseDto"
                          }
                        },
                        "meta": {
                          "$ref": "#/components/schemas/PaginationMeta"
                        }
                      }
                    },
                    "success": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Sprint not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  }
}